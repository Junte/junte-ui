image: docker:18
variables:
  DOCKER_CACHE_IMAGE: $CI_REGISTRY_IMAGE/cache
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE/tmp:${CI_PIPELINE_ID}_${CI_COMMIT_SHA}
  DOCKER_TEST_IMAGE: $CI_REGISTRY_IMAGE/tmp:${CI_PIPELINE_ID}_${CI_COMMIT_SHA}_test
  DOCKER_BUILD_IMAGE: $CI_REGISTRY_IMAGE/tmp:${CI_PIPELINE_ID}_${CI_COMMIT_SHA}_build

stages:
  - test
  - build
  - publish
  - deploy
  - publish_npm

build:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $DOCKER_CACHE_IMAGE || true
    - docker build
      --cache-from $DOCKER_CACHE_IMAGE
      --target build
      -t $DOCKER_CACHE_IMAGE
      -t $DOCKER_BUILD_IMAGE
      -f deploy/Dockerfile .
    - docker build
      --cache-from $DOCKER_CACHE_IMAGE
      -t $DOCKER_IMAGE
      -f deploy/Dockerfile .
    - docker push $DOCKER_IMAGE
    - docker push $DOCKER_CACHE_IMAGE
    - docker push $DOCKER_BUILD_IMAGE
  
include:
  - template: Dependency-Scanning.gitlab-ci.yml

.base_publish:
  stage: publish
  services:
    - docker:dind
  dependencies: []
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $DOCKER_IMAGE
  script:
    - docker tag $DOCKER_IMAGE $TARGET_IMAGE
    - docker push $TARGET_IMAGE

publish_unstable:
  extends: .base_publish
  only:
    - master
  variables:
    TARGET_IMAGE: $CI_REGISTRY_IMAGE/unstable:${CI_PIPELINE_ID}

publish_rc:
  extends: .base_publish
  only:
    - rc
  variables:
    TARGET_IMAGE: $CI_REGISTRY_IMAGE/rc:${CI_PIPELINE_ID}

publish_stable:
  extends: .base_publish
  only:
    - prod
  variables:
    TARGET_IMAGE: $CI_REGISTRY_IMAGE/stable:${CI_PIPELINE_ID}

.base_deploy:
  image: curlimages/curl:7.72.0
  stage: deploy
  dependencies: []
  script:
    - curl -k -X POST -d "component=${DEPLOYER_COMPONENT}&key=${DEPLOYER_KEY}&tag=${CI_PIPELINE_ID}" ${DEPLOYER_HOST}

deploy_development:
  extends: .base_deploy
  only:
    - master
  environment:
    name: development
    url: $SITE_ADDRESS

deploy_staging:
  extends: .base_deploy
  only:
    - rc
  environment:
    name: staging
    url: $SITE_ADDRESS

deploy_production:
  extends: .base_deploy
  only:
    - prod
  environment:
    name: production
    url: $SITE_ADDRESS

.base_publish_npm:
  image: $DOCKER_BUILD_IMAGE
  stage: deploy
  dependencies: []
  allow_failure: true
  before_script:
    - cd /src/projects/junte-ui
    - npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}

publish_npm_master:
  extends: .base_publish_npm
  script:
    - npm run publish
  only:
    - master

publish_npm_rc:
  extends: .base_publish_npm
  script:
    - npm run publish:rc
  only:
    - rc

publish_npm_prod:
  extends: .base_publish_npm
  script:
    - npm run publish:prod
  only:
    - prod
