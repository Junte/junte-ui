@import "jnt-variables";

@mixin label-size($size) {
  padding: #{map-get($size, padding)};
  font-size: #{map-get($size, font-size)};

  [data-icon][child-of=#{$jnt-label-host}] {
    &[data-type='svg'], &[data-type='animated'] {
      width: #{map-get($size, icon-size)};
      height: #{map-get($size, icon-size)};
    }
  }
}

@mixin jnt-label($passed: (), $context: null, $strategy: 'changes') {
  $defs: (
    corner: $jnt-corner-small,
    background: $jnt-primary-color,
    font-size: inherit,
    border: none,
    icon: (
      margin-right: $jnt-gutter-small
    ),
    sizes: (
      small: (
        padding: 2px $jnt-gutter-small,
        font-size: 10px,
        icon-size: 12px
      ),
      normal: (
        padding: 3px $jnt-gutter-small,
        font-size: 12px,
        icon-size: 14px
      )
    )
  );

  $vars: $passed;
  $declare: false;

  @if $passed == () or $strategy == 'merge' {
    $vars: map-merge($defs, $passed);
    $declare: true;
  }

  jnt-label[host=#{$jnt-label-host}], #{$context} {
    @if $declare {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      box-sizing: border-box;
      [text][child-of=#{$jnt-label-host}][child-of=#{$jnt-label-host}][child-of=#{$jnt-label-host}] {
        white-space: nowrap;
      }
    }

    border: map-get($vars, border);
    border-radius: map-get($vars, corner);
    font-size: map-get($vars, font-size);
    background: map-get($vars, background);

    @if map-has-key($vars, sizes) {
      @each $size, $map in map-get($vars, sizes) {
        &[data-size='#{$size}'] {
          @include label-size($map);
        }
      }
    }

    @if map-has-key($vars, icon) {
      $icon: map-get($vars, icon);
      [data-icon][child-of=#{$jnt-label-host}] {
        margin-right: map-get($icon, margin-right);
      }
    }
  }

}
