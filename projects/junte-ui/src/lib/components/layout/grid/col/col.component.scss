@import "variables";

$grid-columns: 12;

$col-paddings: (
  #{$gutter-tiny-name}: (
    padding: $gutter-tiny
  ),
  #{$gutter-small-name}: (
    padding: $gutter-small
  ),
  #{$gutter-normal-name}: (
    padding: $gutter-normal
  ),
  #{$gutter-big-name}: (
    padding: $gutter-big
  ),
  #{$gutter-large-name}: (
    padding: $gutter-large
  ),
  #{$gutter-huge-name}: (
    padding: $gutter-huge
  )
);

@mixin col-padding($padding) {
  & {
    padding-left: #{map-get($padding, padding)};
    padding-right: #{map-get($padding, padding)};
  }
}

@mixin col($passed: (), $context: null, $strategy: 'changes') {

  :host, #{$context} {
    display: block;
    box-sizing: border-box;
    position: relative;

    @each $padding, $value in $col-paddings {
      &[padding = '#{$padding}'] {
        @include col-padding($value);
      }
    }

    @each $breakpoints, $value in $grid-breakpoints {
      @media screen and (min-width: $value) {
        @for $i from 1 through $grid-columns {
          &[#{$breakpoints} = '#{$i}'] {
            $width: $i/$grid-columns;
            flex: 0 0 percentage($width);
            max-width: percentage($width);
          }
        }
      }
    }

    @for $i from 1 through $grid-columns {
      &[span = "#{$i}"] {
        $width: $i/$grid-columns;
        flex: 0 0 percentage($width);
        max-width: percentage($width);
      }
    }
  }
}
