@import "variables";

@keyframes loading {
  0% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0 50%;
  }
}

@mixin skeleton-size($size) {
  [image] {
    min-width: $size;
    width: $size;
    min-height: $size;
    height: $size;
  }
}

@mixin skeleton($passed: (), $context: null, $strategy: 'changes') {

  $defs: (
    background: (
      from: $secondary-background,
      to: darken($secondary-background, 5%),
    ),
    line: (
      height: 24px,
    ),
    avatar: (
      sizes: (
        tiny: 24px,
        small: 40px,
        normal: 80px,
        large: 120px
      ),
    ),
  );

  $vars: $passed;
  $declare: false;

  @if $passed == () or $strategy == 'merge' {
    $vars: map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    display: block;
    @if map-has-key($vars, avatar) {
      $sizes: map-get(map-get($vars, avatar), sizes);
      @each $size, $map in $sizes {
        &[size = '#{$size}'] {
          @include skeleton-size($map);
        }
      }
    }
    &[type='text'] {
      width: 100%;
    }
    &[animated='false'] {
      [line], [image] {
        animation: none;
      }
    }
  }

  #{$context} [line] {
    @if map-has-key($vars, line) {
      $line: map-get($vars, line);
      min-height: map-get($line, height);
    }
    width: 100%;
  }

  #{$context} [avatar='true'] {
    border-radius: 50%;
  }

  #{$context} [line], [image] {
    @if map-has-key($vars, background) {
      $background: map-get($vars, background);
      background: map-get($background, from) linear-gradient(90deg, map-get($background, from) 25%, map-get($background, to) 37%, map-get($background, from) 63%);
    }
    background-size: 400% 100%;
    animation: loading 1.5s ease infinite;
  }
}
