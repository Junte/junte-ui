@import "variables";

@mixin icon-size($vars) {
  &[type='font'] {
    &:not([size='auto']) {
      [icon] {
        font-size: map-get($vars, size);
      }
    }
  }
  &[type='svg'], &[type='animated'] {
    [icon] {
      width: map-get($vars, size);
      height: map-get($vars, size);
    }
  }
}

@mixin icon($passed: (), $context: null, $strategy: 'merge') {
  $defs: (
    color: null,
    size: null,
    sizes: (
      auto: (
        size: 22px,
      ),
      tiny: (
        size: 11px,
      ),
      small: (
        size: 13px,
      ),
      normal: (
        size: 16px,
      ),
      large: (
        size: 20px,
      )
    )
  );

  $vars: $passed;
  $declare: false;

  @if $passed == () or $strategy == 'merge' {
    $vars: map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    @if $declare {
      display: inline-flex;
      vertical-align: middle;
    }

    &[type='font'] {
      [icon] {
        color: map-get($vars, color);
        font-size: #{map-get($vars, size)} !important;
      }
    }

    &[type='svg'], &[type='animated'] {
      [icon] {
        fill: map-get($vars, color);
        @if map-has-key($vars, size) {
          width: #{map-get($vars, size)} !important;
          height: #{map-get($vars, size)} !important;
        }
      }
    }

    @if map-has-key($vars, sizes) {
      @each $size, $map in map-get($vars, sizes) {
        &[size='#{$size}'] {
          @include icon-size($map);
        }
      }
    }
  }
}
