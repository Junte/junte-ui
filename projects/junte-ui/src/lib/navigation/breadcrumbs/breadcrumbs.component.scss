@import 'jnt-variables';
@import 'jnt-functions';
@import 'jnt-hosts';
@import 'elements/icon/icon';
@import 'layout/responsive/responsive';

@mixin jnt-breadcrumbs($passed: (), $context: null, $strategy: 'changes') {

  $defs: (
    padding: 0 0 0 $jnt-gutter-normal,
    margin: $jnt-gutter-small 0 $jnt-gutter-small 0,
    breadcrumb: (
      max-width: null,
      font-size: $jnt-font-size-small,
      color: $jnt-primary-text-light-color,
      hover: (
        color: $jnt-primary-color
      ),
      last: (
        color: $jnt-primary-text-dark-color
      ),
    )
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $jnt-ng-deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  #{if($context, $context, $jnt-breadcrumbs-host)} {
    @if $declare {
      display: flex;
      align-items: center;
    }
    padding: map-get($vars, padding);
    margin: map-get($vars, margin);

    @include max-for-tablet() {
      &[data-with-aside='true'] {
        @if $declare {
          min-height: $app-aside-burger-height;
          margin-top: 0;
          padding-left: calc(#{$app-aside-burger-width} + #{$jnt-gutter-normal});
        }
      }
    }
  }

  #{$context} #{$wrapper} a {
    @if $declare {
      text-decoration: none;
      user-select: none;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;

      &[data-disabled='true'], &:last-of-type {
        pointer-events: none;
        cursor: default;
      }
    }

    @if map-has-key($vars, breadcrumb) {
      $breadcrumb: map-get($vars, breadcrumb);
      max-width: map-get($breadcrumb, max-width);
      font-size: map-get($breadcrumb, font-size);
      color: map-get($breadcrumb, color);

      @if map-has-key($breadcrumb, hover) {
        $hover: map-get($breadcrumb, hover);
        &:hover {
          color: map-get($hover, color);
        }
      }

      @if map-has-key($breadcrumb, last) {
        $last: map-get($breadcrumb, last);
        &:last-of-type {
          color: map-get($last, color);
        }
      }
    }
  }

  #{$context} #{$wrapper} [data-icon] {
    @if $declare {
      &:last-child {
        display: none;
      }
    }
    @include jnt-icon((
      color: map-get($vars, color),
      size: 8px
    ), '&');
  }
}

@if $jnt-debug {
  @debug 'breadcrumbs compiled';
}
