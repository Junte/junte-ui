@import "jnt-variables";
@import "layout/app/variables";
@import "navigation/menu/menu";
@import "layout/responsive/responsive";

@mixin jnt-app-aside($passed: (), $context: null, $deep: false, $strategy: 'changes') {

  $defs: (
    padding: $app-header-height 0 0 0,
    position: absolute,
    background: $jnt-primary-background,
    menu: (
      item: (
        color: $jnt-primary-text-light-color,
        active: (
          background-color: null
        ),
      ),
      sub: (
        background-color: $jnt-primary-background,
      )
    )
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    display: block;
    box-sizing: border-box;
    position: map-get($vars, position);
    top: 0;
    left: 0;
    bottom: 0;
    z-index: 2;
  }

  #{$context} #{$wrapper} [data-menu] {
    @include jnt-menu((
      top: (
        item: (
          corner: 0,
          height: 50px,
          orphan-color: $jnt-primary-text-light-color,
          orphan-hover-color: $jnt-primary-text-dark-color,
          active: (
            underline: false,
            color: $jnt-primary-color,
          ),
          icon: (
            margin-right: $jnt-gutter-normal,
            size: 20px
          ),
          padding: (
            inner: 0 $jnt-gutter-normal,
            outer: 0,
          ),
          toggle: (
            toggle: false
          ),
          focus: (
            outline: null,
            shadow: inset $jnt-outline-shadow-small $jnt-primary-light-color,
          ),
        ),
      ),
      sub: (
        collapsed: (
          position: fixed,
          left: $app-aside-collapsed-width,
          item: (
            padding: 0 $jnt-gutter-normal,
          ),
        ),
        item: (
          color: $jnt-primary-text-light-color,
          padding: 0 0 0 50px !important,
          active: (
            underline: false,
            background-color: $jnt-secondary-background,
            color: $jnt-primary-color
          ),
          focus: (
            outline: null,
            shadow: inset $jnt-outline-shadow-small $jnt-primary-light-color,
          ),
          height: 50px,
        ),
      ),
    ), '&');
  }

  @if map-has-key($vars, menu) {
    $menu: map-get($vars, menu);
    @if map-has-key($menu, item) {
      $item: map-get($menu, item);
      #{$context} #{$wrapper} jnt-menu {
        @include jnt-menu((
          top: (
            item: (
              color: map-get($item, color),
            )
          )
        ), '&');
      }

      @if map-has-key($item, active) {
        $active: map-get($item, active);
        #{$context} #{$wrapper} jnt-menu {
          @include jnt-menu((
            top: (
              item: (
                active: (
                  background-color: map-get($active, background-color)
                ),
              )
            )
          ), '&');
        }
      }
    }
    @if map-has-key($menu, sub) {
      $sub: map-get($menu, sub);
      #{$context} #{$wrapper} jnt-menu {
        @include jnt-menu((
          sub: (
            background-color: map-get($sub, background-color)
          )
        ), '&');
      }
    }
  }

  #{$context} #{$wrapper} button {
    display: block;
    width: 100%;
    border: 0;
    border-bottom: 1px solid $jnt-muted-color;
    background-color: map-get($vars, background);
    color: $jnt-primary-text-light-color;
    font-size: .875rem;
    height: 50px;
    line-height: 50px;
    padding: 0 $jnt-gutter-normal;
    cursor: pointer;
    white-space: nowrap;
    border-radius: 0;

    &:focus {
      outline: 0;
    }

    &:hover {
      color: $jnt-primary-text-light-color;
      background-color: $jnt-secondary-background;
    }

    span {
      text-overflow: clip;
      opacity: 1;
    }

    jnt-icon {
      color: $jnt-primary-text-color;
      font-size: 20px;
    }
  }

  @include for-mobile() {
    :host, #{$context} {
      &[data-opened="true"] {
        width: 100%;

        #{$wrapper} [data-overlay] {
          width: 100%;
          height: 100%;
          opacity: 1;
        }

        #{$wrapper} [data-drawer] {
          transform: translate3d(0, 0, 0);
        }
      }

      &[data-opened="false"] {
        width: 0;

        #{$wrapper} [data-overlay] {
          opacity: 0;
        }

        #{$wrapper} [data-drawer] {
          transform: translate3d(-100%, 0, 0);
          transition: none;
        }
      }
    }
  }

  #{$context} #{$wrapper} [data-overlay] {
    position: absolute;
    top: 0;
    right: 0;
    content: '';
    background-color: rgba(0, 0, 0, .4);
    opacity: 0;
    z-index: 1;
  }

  #{$context} #{$wrapper} [data-drawer] {
    position: map-get($vars, position);
    padding: map-get($vars, padding);
    top: 0;
    left: 0;
    z-index: 2;
    height: 100%;
    background-color: map-get($vars, background);
    box-shadow: $jnt-shadow-normal;
    box-sizing: border-box;
    transform: translate3d(0, 0, 0);
    transition: transform .3s linear, width .3s linear;

    [data-scroll] {
      width: 100%;
      height: 100%;
      overflow-y: auto;
      overflow-x: hidden;
    }

    &[data-collapsed="true"] {
      width: $app-aside-collapsed-width;
    }

    &[data-collapsed="false"] {
      width: $app-aside-width;
    }
  }
}

@if $jnt-debug {
  @debug 'app-aside compiled';
}
