@import "jnt-variables";
@import "jnt-functions";
@import "layout/app/variables";
@import "layout/responsive/responsive";
@import "layout/app/body/app-body";

@mixin jnt-app-content($passed: (), $context: null, $strategy: 'changes') {

  $defs: (
    padding: $app-header-height 0 0 0,
    background: $jnt-page-background
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $jnt-ng-deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    @if $declare {
      display: block;
      flex: auto;
      box-sizing: border-box;
      overflow-x: hidden;
      overflow-y: auto;
      position: relative;
      z-index: 1;
    }
    padding: map-get($vars, padding);
    background-color: map-get($vars, background);

    &[data-with-aside='full'] {
      @if $declare {
        padding-left: $app-aside-width;
      }
    }

    &[data-with-aside='collapsed'] {
      @if $declare {
        padding-left: $app-aside-collapsed-width;
      }
    }

    @include for-mobile() {
      @if $declare {
        padding-left: 0 !important;
        &[data-with-breadcrumbs='false'][data-with-aside='full'] {
          margin-top: $app-aside-burger-height;
        }
      }
    }

    @include jnt-app-body((height: calc(100vh - #{$app-footer-height} - #{$app-header-height})));

    &[data-with-footer="false"] {
      @include jnt-app-body((height: calc(100vh - #{$app-header-height})));
    }
    [data-with-footer="false"] {
      @include jnt-app-body((height: calc(100vh - #{$app-header-height})));
    }
  }
}

@if $jnt-debug {
  @debug 'app-content compiled';
}
