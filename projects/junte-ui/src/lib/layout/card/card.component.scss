@import "jnt-variables";
@import "jnt-functions";
@import "elements/icon/icon";
@import "layout/responsive/responsive";
@import "forms/button/button";
@import "overlays/popover/popover";

@mixin card-padding($padding, $wrapper) {
  #{$wrapper} [data-body] {
    padding: $padding;
  }
}

@mixin card-fill($scheme, $wrapper) {
  & {
    background-color: map-get($scheme, background-color);
  }
  #{$wrapper} [data-indicator] {
    border-color: map-get($scheme, background-color);
  }
  #{$wrapper} [data-action] {
    @include jnt-button((border: 2px solid map-get($scheme, background-color)), '&');
  }
}

@mixin jnt-card($passed: (), $context: null, $deep: false, $strategy: 'changes') {
  $defs: (
    shadow: null,
    corner: $jnt-corner-normal,
    border: null,
    title: (
      padding: $jnt-gutter-normal,
      margin: 0,
      color: $jnt-primary-text-color,
      text-align: left,
      font-weight: $jnt-font-weight-bold,
      font-size: $jnt-font-size-normal
    ),
    footer: (
      padding: $jnt-gutter-normal,
      margin: 0,
      color: $jnt-primary-text-color,
      text-align: left,
      font-weight: $jnt-font-weight-bold,
      font-size: $jnt-font-size-normal
    ),
    picture: (
      padding: 0 $jnt-gutter-normal 0 0,
      margin: null,
      border-right: null,
    ),
    indicator: (
      width: $jnt-gutter-small,
    ),
    hover: (
      shadow: $jnt-shadow-normal,
    ),
    padding: (
      tiny: $jnt-gutter-tiny,
      small: $jnt-gutter-small,
      normal: $jnt-gutter-normal,
      big: $jnt-gutter-big,
      large: $jnt-gutter-large,
      huge: $jnt-gutter-huge,
    ),
    schemes: (
      primary: (
        background-color: $jnt-primary-background,
      ),
      secondary: (
        background-color: $jnt-secondary-background,
      ),
      success: (
        background-color: $jnt-success-color,
      ),
      fail: (
        background-color: $jnt-fail-color,
      ),
    ),
    overlay: (
      background-color: rgba($jnt-primary-background, 0.75),
      icon: (
        size: 40px,
      ),
    ),
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    display: block;
    position: relative;
    min-height: 40px;
    box-shadow: map-get($vars, shadow);
    border-radius: map-get($vars, corner);
    border: map-get($vars, border);
    box-sizing: border-box;
    &[data-width="fluid"] {
      width: 100%;
    }
    @if map-has-key($vars, schemes) {
      @each $scheme, $map in map-get($vars, schemes) {
        &[data-scheme='#{$scheme}'] {
          @include card-fill($map, $wrapper);
        }
      }
    }

    @if map-has-key($vars, padding) {
      $padding: map-get($vars, padding);
      @each $padding, $map in $padding {
        &[data-padding = '#{$padding}'] {
          @include card-padding($map, $wrapper);
        }
      }
    }

    &[data-features*='clickable'] {
      #{$wrapper} [data-body] {
        cursor: pointer;
      }
      &:hover {
        @if map-has-key($vars, hover) {
          $hover: map-get($vars, hover);
          box-shadow: map-get($hover, shadow);
        }
      }
      &:focus {
        outline: 0;
      }
    }

    &[data-has-color='true'] {
      @if map-has-key($vars, indicator) {
        $indicator: map-get($vars, indicator);
        border-left: map-get($indicator, width) solid;
      }
    }

    &[data-has-icon='true'] {
      &[data-has-header='true'] {
        #{$wrapper} [data-header] {
          padding-top: $jnt-gutter-big;
        }
      }
      &[data-has-header='false'][data-has-title='true'] {
        #{$wrapper} [data-title] {
          padding-top: $jnt-gutter-big;
        }
      }
      &[data-has-header='false'][data-has-title='false'] {
        #{$wrapper} [data-body] {
          padding-top: $jnt-gutter-big;
        }
      }
    }

    &[data-has-picture='true'] {
      #{$wrapper} [data-body] {
        display: flex;
        [data-content] {
          flex: 1;
        }
      }
    }
    @content;
  }

  #{$context} #{$wrapper} [data-picture] {
    @if map-has-key($vars, picture) {
      $picture: map-get($vars, picture);
      padding: map-get($picture, padding);
      margin: map-get($picture, margin);
      border-right: map-get($picture, border-right);
    }
  }

  #{$context} #{$wrapper} [data-indicator],
  #{$context} #{$wrapper} [data-action] {
    position: absolute;
    top: -12px;
    right: 0;
    z-index: 2;
  }

  #{$context} #{$wrapper} [data-indicator] {
    width: 32px;
    height: 32px;
    background-color: $jnt-secondary-background;
    border-radius: $jnt-corner-normal;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid;
    @include jnt-icon((
      size: 16px,
      color: $jnt-primary-light-color,
    ), '&');
  }

  #{$context} #{$wrapper} [data-action] {
    @include jnt-button((
      without-text-corner: $jnt-corner-normal,
      schemes: (
        secondary: (
          inverse-color: $jnt-primary-color
        ),
      ),
      sizes: (
        small: (
          height: 36px,
          padding-without-text: 0 $jnt-gutter-small,
          icon: (
            size: 16px,
          ),
        ),
      ),
    ), '&');
  }

  #{$context} #{$wrapper} [data-text] {
    @if map-has-key($vars, title) {
      $title: map-get($vars, title);
      padding: map-get($title, padding);
      margin: map-get($title, margin);
      text-align: map-get($title, text-align);
      font-weight: map-get($title, font-weight);
      color: map-get($title, color);
      font-size: map-get($title, font-size);
    }
  }

  #{$context} #{$wrapper} [data-footer] {
    @if map-has-key($vars, footer) {
      $footer: map-get($vars, footer);
      padding: map-get($footer, padding);
      margin: map-get($footer, margin);
      text-align: map-get($footer, text-align);
      font-weight: map-get($footer, font-weight);
      color: map-get($footer, color);
      font-size: map-get($footer, font-size);
    }
  }

  #{$context} #{$wrapper} [data-load],
  #{$context} #{$wrapper} [data-error] {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: $jnt-corner-normal;
    z-index: 1;
    @if map-has-key($vars, overlay) {
      $overlay: map-get($vars, overlay);
      background-color: map-get($overlay, background-color);
      @if map-has-key($overlay, icon) {
        $icon: map-get($overlay, icon);
        [data-icon] {
          @include jnt-icon((
            size: map-get($icon, size)
          ), '&');
        }
      }
    }
  }
}
