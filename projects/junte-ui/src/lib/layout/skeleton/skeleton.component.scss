@import "jnt-variables";
@import "jnt-functions";

@keyframes jnt-loading {
  0% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0 50%;
  }
}

@mixin skeleton-size($size) {
  [data-avatar] {
    min-width: $size;
    width: $size;
    min-height: $size;
    height: $size;
  }
}

@mixin jnt-skeleton($passed: (), $context: null, $deep: false, $strategy: 'changes') {

  $defs: (
    background: (
      from: $jnt-highlight-background,
      to: darken($jnt-highlight-background, 5%),
    ),
    line: (
      height: 24px,
    ),
    avatar: (
      sizes: (
        tiny: 24px,
        small: 40px,
        normal: 80px,
        large: 120px
      ),
    ),
    card: (
      height: 70px,
      corner: $jnt-corner-normal,
    ),
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    display: block;
    @if map-has-key($vars, avatar) {
      $sizes: map-get(map-get($vars, avatar), sizes);
      @each $size, $map in $sizes {
        &[data-size = '#{$size}'] {
          @include skeleton-size($map);
        }
      }
    }
    &[data-type='text'] {
      width: 100%;
    }
    &[data-animated='false'] {
      [data-line], [data-avatar], [data-card] {
        animation: none;
      }
    }
  }

  #{$context} #{$wrapper} [data-line] {
    @if map-has-key($vars, line) {
      $line: map-get($vars, line);
      min-height: map-get($line, height);
    }
    width: 100%;
  }

  #{$context} #{$wrapper} [data-card] {
    @if map-has-key($vars, card) {
      $card: map-get($vars, card);
      min-height: map-get($card, height);
      border-radius: map-get($card, corner);
    }
    width: 100%;
  }

  #{$context} #{$wrapper} [data-avatar='true'] {
    border-radius: 50%;
  }

  #{$context} #{$wrapper} [data-line], [data-avatar], [data-card] {
    @if map-has-key($vars, background) {
      $background: map-get($vars, background);
      background: map-get($background, from) linear-gradient(90deg, map-get($background, from) 25%, map-get($background, to) 37%, map-get($background, from) 63%);
    }
    background-size: 400% 100%;
    animation: jnt-loading 1.5s ease infinite;
  }
}

@if $jnt-debug {
  @debug 'skeleton compiled';
}
