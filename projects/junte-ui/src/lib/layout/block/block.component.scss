@import "jnt-variables";
@import "jnt-functions";
@import "elements/icon/icon";
@import "layout/responsive/responsive";

@mixin jnt-block($passed: (), $context: null, $deep: false, $strategy: 'changes') {
  $defs: (
    shadow: $jnt-shadow-normal,
    corner: $jnt-corner-normal,
    padding: (
      tiny: $jnt-gutter-tiny,
      small: $jnt-gutter-small,
      normal: $jnt-gutter-normal,
      big: $jnt-gutter-big,
      large: $jnt-gutter-large,
      huge: $jnt-gutter-huge,
    ),
    header: (
      padding: 0 0 $jnt-gutter-normal 0,
    ),
    body: (
      padding: null
    ),
    footer: (
      padding: null
    ),
    background: $jnt-primary-background,
    title-color: $jnt-primary-color,
    overlay: (
      background-color: rgba($jnt-primary-background, 0.75),
      icon: (
        size: 40px,
      ),
    ),
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    display: inline-flex;
    flex-direction: column;
    position: relative;
    min-height: 40px;
    box-shadow: map-get($vars, shadow);
    border-radius: map-get($vars, corner);
    background-color: map-get($vars, background);
    box-sizing: border-box;
    &[data-width="fluid"] {
      width: 100%;
    }

    @if map-has-key($vars, padding) {
      @each $padding, $map in map-get($vars, padding) {
        &[data-padding = '#{$padding}'] {
          #{$wrapper} [data-block] {
            padding: $map;
          }
        }
      }
    }

    &[data-has-help='true'][data-has-header='false'] {
      #{$wrapper} [data-block] {
        padding-top: $jnt-gutter-large;
      }
    }

    &[data-padding='none'] {
      #{$context} #{$wrapper} [data-block] [data-title] {
        padding-top: $jnt-gutter-normal;
      }
    }

    &[data-features*='adapted'] {
      @include for-mobile() {
        box-shadow: none;
        background-color: transparent;
        padding-left: 0;
        padding-right: 0;
        #{$wrapper} [data-title] {
          color: $jnt-primary-color;
        }
      }
    }
  }

  #{$context} #{$wrapper} [data-help] {
    position: absolute;
    top: -12px;
    right: 0;
    z-index: 2;
    width: 32px;
    height: 32px;
    border-color: map-get($vars, background-color);
    background-color: $jnt-secondary-background;
    border-radius: $jnt-corner-normal;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid map-get($vars, background);
    @include jnt-icon((
      size: 16px,
      color: $jnt-primary-light-color,
    ), '&');
  }

  #{$context} #{$wrapper} [data-block] {
    border-radius: map-get($vars, corner);
    overflow: hidden;

    [data-title] {
      text-align: center;
      font-weight: $jnt-font-weight-bold;
      color: map-get($vars, title-color);
      border-bottom: 1px solid $jnt-secondary-color;
      @if map-has-key($vars, header) {
        $header: map-get($vars, header);
        padding: map-get($header, padding);
      }
    }

    [data-body] {
      @if map-has-key($vars, body) {
        $body: map-get($vars, body);
        padding: map-get($body, padding);
      }
    }

    [data-footer] {
      @if map-has-key($vars, footer) {
        $footer: map-get($vars, footer);
        padding: map-get($footer, padding);
      }
    }

    [data-loading], [data-error], [data-success] {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: $jnt-corner-normal;
      z-index: 1;
      @if map-has-key($vars, overlay) {
        $overlay: map-get($vars, overlay);
        background-color: map-get($overlay, background-color);
        @if map-has-key($overlay, icon) {
          $icon: map-get($overlay, icon);
          [data-icon] {
            @include jnt-icon((
              size: map-get($icon, size)
            ), '&');
          }
        }
      }
    }
  }
}

@if $jnt-debug {
  @debug 'block compiled';
}
