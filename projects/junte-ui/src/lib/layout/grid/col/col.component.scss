@import "jnt-variables";
@import "jnt-functions";

@mixin jnt-grid-col($passed: (), $context: null, $strategy: 'changes') {

  $defs: (
    grid-columns: 12,
  );

  $vars: $passed;
  $declare: false;

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    display: block;
    box-sizing: border-box;
    position: relative;

    @each $breakpoints, $value in $jnt-grid-breakpoints {
      @media screen and (min-width: $value) {
        @for $i from 1 through map-get($vars, grid-columns) {
          &[data-#{$breakpoints} = '#{$i}'] {
            $width: $i/map-get($vars, grid-columns);
            flex: 0 0 percentage($width);
            max-width: percentage($width);
          }
        }
      }
    }

    @for $i from 1 through map-get($vars, grid-columns) {
      &[data-span = "#{$i}"] {
        $width: $i/map-get($vars, grid-columns);
        flex: 0 0 percentage($width);
        max-width: percentage($width);
      }
    }
  }
}

@if $jnt-debug {
  @debug 'col compiled';
}
