@import "variables";

@mixin col-gutter($gutter) {
  & {
    margin-top: -$gutter;
    > :not(router-outlet) {
      margin-top: $gutter;
    }
  }
}

@mixin grid-row($passed: (), $context: null, $strategy: 'changes') {

  $defs: (
    gutters: (
      tiny: $jnt-gutter-tiny,
      small: $jnt-gutter-small,
      normal: $jnt-gutter-normal,
      big: $jnt-gutter-big,
      large: $jnt-gutter-large,
      huge: $jnt-gutter-huge,
    ),
  );

  $vars: $passed;
  $declare: false;

  @if $passed == () or $strategy == 'merge' {
    $vars: map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    display: flex;
    text-align: left;
    flex-wrap: wrap;
    margin: 0 (-$jnt-grid-gutter);

    @if map-has-key($vars, gutters) {
      $gutters: map-get($vars, gutters);
      @each $gutter, $map in $gutters {
        &[data-gutter = '#{$gutter}'] {
          @include col-gutter($map);
        }
      }
    }

    &[data-align='start'] {
      align-items: flex-start;
    }
    &[data-align='center'] {
      align-items: center;
    }
    &[data-align='end'] {
      align-items: flex-end;
    }
    &[data-align='stretch'] {
      align-items: stretch;
    }

  }
}
