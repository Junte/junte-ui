@import "jnt-variables";
@import "jnt-functions";
@import "elements/icon/icon";
@import "layout/responsive/responsive";
@import "layout/spinner/spinner";

@mixin select-size($size, $wrapper) {
  #{$wrapper} [data-select] {
    font-size: map-get($size, font-size);
    min-height: map-get($size, height);

    [data-spinner] {
      @include jnt-spinner((
        size: map-get($size, state-icon)
      ), '&');
    }
  }
}

@mixin jnt-select($passed: (), $context: null, $strategy: 'changes') {

  $defs: (
    icon: (
      color: $jnt-primary-text-color
    ),
    chips: (
      width: 'default'
    ),
    sizes: (
      small: (
        font-size: 11px,
        height: 30px,
        chips: (
          padding: 2px $jnt-gutter-small
        ),
        input: (
          padding: 2px 0 2px $jnt-gutter-small
        ),
        state-icon: 16px
      ),
      normal: (
        font-size: 14px,
        height: 38px,
        chips: (
          padding: 3.5px $jnt-gutter-small
        ),
        input: (
          padding: 3px 0 3px $jnt-gutter-small
        ),
        state-icon: 18px
      ),
      large: (
        font-size: 16px,
        height: 50px,
        chips: (
          padding: $jnt-gutter-small
        ),
        input: (
          padding: $jnt-gutter-small 0 $jnt-gutter-small $jnt-gutter-small
        ),
        state-icon: 20px
      )
    )
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $jnt-ng-deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    @if $declare {
      display: inline-block;
      position: relative;
      min-width: 70px;
      color: $jnt-primary-text-color;
      line-height: $jnt-line-height-base;
      &[data-width='fluid'] {
        display: block;
        flex: 1;
      }
    }
    @include for-mobile() {
      @if $declare {
        border: 1px solid $jnt-control-border-color;
        border-radius: $jnt-corner-small;
      }
    }
    @if map-has-key($vars, sizes) {
      $sizes: map-get($vars, sizes);
      @each $size, $map in $sizes {
        &[data-size = '#{$size}'] {
          @include select-size($map, $wrapper);

          [data-select] {
            ul li {
              input {
                font-size: map_get($map, font-size);
              }

              @if map-has-key($map, chips) {
                $chips: map-get($map, chips);
                padding: map-get($chips, padding);
              }
              @if map-has-key($map, input) {
                $input: map-get($map, input);
                &[data-query] {
                  padding: map-get($input, padding);
                }
              }
            }
          }
        }
      }
    }

    &[data-opened='true'] {
      @include for-mobile() {
        @if $declare {
          box-shadow: $jnt-outline-shadow-normal $jnt-secondary-dark-color;
        }
      }

      [data-select] {
        @if $declare {
          box-shadow: $jnt-outline-shadow-normal $jnt-secondary-dark-color;
          border-color: $jnt-primary-color;
          @include for-mobile() {
            box-shadow: none;
            border-color: transparent;
            border-radius: calc(#{$jnt-corner-small - 1px}) calc(#{$jnt-corner-small - 1px}) 0 0;
          }
        }
      }
    }

    &[data-mode='single'] {
      [data-select] ul,
      [data-select] ul li {
        margin-right: 0;
      }
      [data-select] ul {
        li {
          @if $declare {
            background-color: $jnt-primary-background;
            margin-left: -$jnt-gutter-tiny;
          }
        }
      }

      &[data-opened='true'][data-features*='search'] [data-select] {
        ul {
          li {
            @if $declare {
              display: none;

              &[data-query] {
                display: flex;
              }
            }
          }
        }
      }

      &[data-empty='false'] {
        [data-select] ul {
          @if $declare {
            flex: 1;

            li {
              width: 100%;
            }
          }
        }

        [data-query] {
          @if $declare {
            display: none;
          }
        }
      }

      &[data-empty='true'] {
        [data-select] ul li[data-query] {
          @if $declare {
            padding-right: $jnt-gutter-small;
          }
        }
      }

      &[data-features*='allowEmpty'] {
        [data-select] ul li {
          button[data-close] {
            @if $declare {
              display: flex;
            }
          }
        }
      }

      &:not([data-features*='allowEmpty']) {
        [data-select] ul li {
          @if $declare {
            padding-right: 0;
          }
        }
      }

      &[data-features*='search'] {
        [data-select] ul li {
          @if $declare {
            margin-right: 0;
          }
        }
      }
    }

    &[data-mode='multiple'] {
      &[data-empty='false']:not([data-features*='search']) {
        [data-query] {
          @if $declare {
            display: none;
          }
        }
      }

      [data-select] ul li {
        button[data-close] {
          @if $declare {
            display: flex;
          }
        }
      }
    }

    &[data-disabled='true'] {
      [data-select] {
        @if $declare {
          background-color: $jnt-control-disabled-background;
          border-color: $jnt-control-disabled-border-color;
          pointer-events: none;
        }

        ul li {
          @if $declare {
            background-color: $jnt-control-disabled-background;
            color: $jnt-control-disabled-border-color;
            opacity: .8;
          }

          &[data-query] {
            @if $declare {
              background-color: transparent;
            }
          }
        }

        [data-close], [data-toggle] {
          @if $declare {
            color: $jnt-control-disabled-border-color;
          }
        }
      }

      &[data-mode='multiple'][data-empty='false'] {
        [data-select] ul li {
          @if $declare {
            background-color: $jnt-muted-color;
          }
        }
      }
    }

    &[data-empty='false'] {
      &[data-opened='false'] {
        [data-query] {
          @if $declare {
            display: none;
          }
        }
      }
    }

    &:not([data-features*='search']) {
      [data-select] ul li {
        @if $declare {
          cursor: default;
        }
      }
    }

    &[data-empty='true'], &[data-mode='single'] {
      [data-select] ul li[data-query] {
        @if $declare {
          flex: 1;

          input {
            width: 100%;
          }
        }
      }
    }
  }

  #{$context} #{$wrapper} [data-select] {
    @if $declare {
      border: 1px solid $jnt-control-border-color;
      border-radius: $jnt-corner-small;
      background-color: $jnt-control-background;
      padding: $jnt-gutter-tiny $jnt-gutter-small;
      box-sizing: border-box;
      position: relative;
      @include for-mobile() {
        border-color: transparent;
        border-radius: calc(#{$jnt-corner-small} - 1px);
      }
    }

    > [data-icon] {
      @if map-has-key($vars, icon) {
        $icon: map-get($vars, icon);
        @include jnt-icon((
          color: map-get($icon, color)
        ), '&');
      }
    }

    &:focus {
      @if $declare {
        outline: 0;
      }
    }

    ul {
      @if $declare {
        flex: 1;
        list-style: none;
        display: flex;
        flex-wrap: wrap;
        padding: 0;
        margin: 0 0 (-$jnt-gutter-tiny);
      }

      @if map-has-key($vars, chips) {
        $chips: map-get($vars, chips);
        @if map-get($chips, width) == 'fluid' {
          @if $declare {
            flex-direction: column;
          }
        }
      }

      li {
        @if $declare {
          display: flex;
          align-items: center;
          position: relative;
          background-color: $jnt-secondary-background;
          border-radius: $jnt-corner-small;
          margin-bottom: $jnt-gutter-tiny;
        }

        [data-empty-options] {
          @if $declare {
            width: 50px;
            height: 10px;
            background-color: $jnt-primary-text-light-color;
          }
        }

        [data-close] {
          @if $declare {
            border: 0;
            background-color: transparent;
            padding: 0 0 0 $jnt-gutter-small;
            color: $jnt-primary-text-light-color;
            margin: 0;
            right: 0;
            display: none;
            cursor: pointer;
            font: $jnt-font-weight-base $jnt-font-size-base $jnt-font-family-base;
            line-height: 100%;
            margin-left: auto;

            &:focus {
              outline: 0;
            }

            & > [data-icon] {
              @include jnt-icon((
                size: 10px
              ), '&');
            }
          }
        }

        &:not(:last-child) {
          @if $declare {
            margin-right: $jnt-gutter-tiny;
          }
        }

        &[data-query] {
          @if $declare {
            background-color: transparent;
          }

          input {
            @if $declare {
              width: 20px;
              border: none;
              background-color: transparent;
              color: $jnt-primary-text-color;
              line-height: $jnt-line-height-base;
              font-family: inherit;
              padding: 0;
              margin: 0;

              &::placeholder {
                padding-left: 1px;
              }

              &:focus {
                outline: none;
              }
            }
          }
        }
      }
    }

    > [data-loading] {
      @if $declare {
        line-height: .8;
      }
    }

    [data-toggle] {
      @if $declare {
        border: 0;
        background-color: transparent;
        padding: 0 $jnt-gutter-small;
        color: $jnt-primary-text-light-color;
        margin: 0;
        align-self: stretch;
        display: flex;
        align-items: center;
        cursor: pointer;

        &:focus {
          outline: 0;
        }

        & > [data-icon] {
          @include jnt-icon((
            size: 12px
          ), '&');
        }
      }
    }
  }

  #{$context} #{$wrapper} [data-options] {
    @include for-mobile() {
      @if $declare {
        background-color: $jnt-control-background;
        border-radius: 0 0 calc(#{$jnt-corner-small} - 1px) calc(#{$jnt-corner-small} - 1px);
      }
    }

    &[data-loading='true'] {
      @if $declare {
        min-height: 100px;
        height: auto;
      }
    }

    [data-skeleton] {
      @if $declare {
        padding: $jnt-gutter-small;
      }
    }

    [data-empty-options] {
      @if $declare {
        height: 200px;
        display: flex;
        justify-content: center;
        align-items: center;

        [data-icon] {
          font-size: 50px;
          color: $jnt-primary-text-light-color;
        }
      }
    }

    [data-options-header] {
      @if $declare {
        padding: $jnt-gutter-small $jnt-gutter-small 0 $jnt-gutter-small;
      }
    }

    [data-loading] {
      @if $declare {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: rgba($jnt-primary-background, .5);
      }
    }

    ul {
      @if $declare {
        list-style: none;
        margin: 0;
        padding: 0;
        max-height: 200px;
        overflow-y: scroll;

        li {
          cursor: pointer;
          padding: $jnt-gutter-small $jnt-gutter-normal;
          border-radius: $jnt-corner-small;

          [data-icon] {
            line-height: 0;
          }

          &[data-selected=true] {
            color: $jnt-primary-light-color;
          }

          &:hover {
            background-color: $jnt-highlight-background;
          }
        }
      }
    }
  }
}

@if $jnt-debug {
  @debug 'select compiled';
}
