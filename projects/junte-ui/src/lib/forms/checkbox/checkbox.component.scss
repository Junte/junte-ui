@import "jnt-variables";
@import "jnt-functions";
@import "elements/icon/icon";

@mixin checkbox-size($size, $wrapper) {
  #{$wrapper} [data-switch] {
    min-width: map-get($size, indicator);
    width: map-get($size, indicator);
    min-height: map-get($size, indicator);
    height: map-get($size, indicator);
    [data-icon] {
      width: map-get($size, icon);
      height: map-get($size, icon);
    }
  }
  #{$wrapper} form input {
    &[custom='true'] {
      width: map-get($size, indicator);
    }
  }
  #{$wrapper} label {
    font-size: map-get($size, font-size);
  }
}

@mixin jnt-checkbox($passed: (), $context: null, $deep: false, $strategy: 'changes') {

  $defs: (
    sizes: (
      tiny: (
        indicator: 12px,
        icon: 6px,
        font-size: 10px
      ),
      small: (
        indicator: 14px,
        icon: 8px,
        font-size: 11px
      ),
      normal: (
        indicator: 18px,
        icon: 10px,
        font-size: 14px,
      ),
      large: (
        indicator: 24px,
        icon: 14px,
        font-size: 16px
      ),
    ),
    label: (
      color: $jnt-control-switch-label-color,
    ),
    switch: (
      background: $jnt-control-background,
      border-color: $jnt-control-border-color,
      active: (
        color: $jnt-primary-color
      )
    )
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    form {
      @if $declare {
        display: flex;
        align-items: center;
        position: relative;
      }
    }
    @if map-has-key($vars, sizes) {
      $sizes: map-get($vars, sizes);
      @each $size, $map in $sizes {
        &[data-size = '#{$size}'] {
          @include checkbox-size($map, $wrapper);
        }
      }
    }
  }

  #{$context} #{$wrapper} input {
    @if $declare {
      position: absolute;
      top: 0;
      z-index: 1;
      cursor: pointer;
      opacity: 0;
      bottom: 0;
      right: 0;
      left: 0;
      margin: 0;
      width: 100%;
      height: 100%;
    }
    &:checked + [data-switch] {
      @if map-has-key($vars, switch) {
        $switch: map-get($vars, switch);
        @if map-has-key($switch, active) {
          $active: map-get($switch, active);
          border-color: map-get($active, color);
        }
      }
    }
    &:disabled {
      @if $declare {
        cursor: default;
        pointer-events: none;
        & ~ label {
          color: $jnt-control-disabled-label-color;
        }
        & + [data-switch] {
          background-color: $jnt-control-disabled-background;
          border-color: $jnt-control-disabled-border-color;

          & > [data-icon] {
            background-color: $jnt-control-disabled-indicator-icon-color;
          }
        }
      }
    }
    &:focus {
      & + [data-switch] {
        @if map-has-key($vars, switch) {
          $switch: map-get($vars, switch);
          @if map-has-key($switch, active) {
            $active: map-get($switch, active);
            @if $declare {
              box-shadow: $jnt-outline-shadow-normal $jnt-secondary-dark-color;
            }
          }
        }
      }
    }
    &:hover {
      & + [data-switch] {
        @if map-has-key($vars, switch) {
          $switch: map-get($vars, switch);
          @if map-has-key($switch, active) {
            $active: map-get($switch, active);
            border-color: map-get($active, color);
          }
        }
      }
    }
  }

  #{$context} #{$wrapper} [label] {
    padding-left: $jnt-control-gutter;
    @if map-has-key($vars, label) {
      $label: map-get($vars, label);
      color: map-get($label, color);
    }
    user-select: none;
  }

  #{$context} #{$wrapper} [data-switch] {
    @if $declare {
      position: relative;
      border-radius: $jnt-corner-base;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: all .3s;
      box-sizing: border-box;
    }
    @if map-has-key($vars, switch) {
      $switch: map-get($vars, switch);
      border: 1px solid map-get($switch, border-color);
      background-color: map-get($switch, background);
      [data-icon] {
        @if map-has-key($switch, active) {
          $active: map-get($switch, active);
          background-color: map-get($active, color);
        }
      }
    }
    [data-icon] {
      @if $declare {
        border-radius: 2px;
      }
    }
  }
}

@if $jnt-debug {
  @debug 'checkbox compiled';
}
