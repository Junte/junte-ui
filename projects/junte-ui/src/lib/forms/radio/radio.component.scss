@import "jnt-variables";
@import "jnt-functions";
@import "elements/icon/icon";

@mixin radio-size($size, $wrapper) {
  #{$wrapper} [data-switch] {
    min-width: $size;
    width: $size;
    min-height: $size;
    height: $size;
  }
};

@mixin jnt-radio($passed: (), $context: null, $deep: false, $strategy: 'changes') {

  $defs: (
    sizes: (
      tiny: (
        indicator: 12px,
        icon: 4px
      ),
      small: (
        indicator: 14px,
        icon: 6px
      ),
      normal: (
        indicator: 18px,
        icon: 10px
      ),
      large: (
        indicator: 24px,
        icon: 14px
      ),
    ),
  );

  $vars: $passed;
  $declare: false;
  $wrapper: null;

  @if $deep {
    $wrapper: '::ng-deep';
  }

  @if $passed == () or $strategy == 'merge' {
    $vars: recursive-map-merge($defs, $passed);
    $declare: true;
  }

  :host, #{$context} {
    form {
      display: flex;
      align-items: center;
    }
    position: relative;
    @if map-has-key($vars, sizes) {
      $sizes: map-get($vars, sizes);
      @each $size, $map in $sizes {
        &[data-size = '#{$size}'] {
          @include radio-size(map-get($map, indicator), $wrapper);
          [data-indicator] {
            width: map-get($map, icon);
            height: map-get($map, icon);
          }
        }
      }
    }
  }

  #{$context} #{$wrapper} input {
    position: absolute;
    top: 0;
    z-index: 1;
    cursor: pointer;
    opacity: 0;
    bottom: 0;
    right: 0;
    left: 0;
    margin: 0;
    width: 100%;
    height: 100%;
    &:checked + [data-switch] {
      border-color: $jnt-primary-color;
    }
    &:disabled {
      cursor: default;
      pointer-events: none;
      & ~ label {
        color: $jnt-control-disabled-label-color;
      }
      & + [data-switch] {
        background-color: $jnt-control-disabled-background;
        border-color: $jnt-control-disabled-border-color;
        > [data-indicator] {
          background-color: $jnt-control-disabled-indicator-icon-color;
        }
      }
    }
    &:focus {
      & + [data-switch] {
        box-shadow: $jnt-outline-shadow-normal $jnt-secondary-dark-color;
      }
    }
    &:hover {
      & + [data-switch] {
        border-color: $jnt-primary-color;
      }
    }
  }

  #{$context} #{$wrapper} label {
    padding-left: $jnt-control-gutter;
    color: $jnt-control-switch-label-color;
    user-select: none;
  }

  #{$context} #{$wrapper} [data-switch] {
    position: relative;
    background-color: $jnt-control-background;
    border: 1px solid $jnt-control-border-color;
    box-sizing: border-box;
    text-align: center;
    border-radius: 50%;
    transition: all .3s;
    [data-indicator] {
      display: inline-block;
      background-color: $jnt-primary-color;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      transition: all .3s;
      border-radius: 50%;
    }
  }
}

@if $jnt-debug {
  @debug 'radio compiled';
}
